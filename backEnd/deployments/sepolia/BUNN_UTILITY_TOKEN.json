{
  "address": "0x25Be1Ce5501BBDC2fb4B21b97F2b0A6F7349EAb9",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buy_tokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw_funds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x312e2170a8a03c0ef10f8c73b617924e741d31c8ad100dcb17521a1a30ec3b80",
  "receipt": {
    "to": null,
    "from": "0x49f2451AbEe35B261bB01f9d0CDC49f8f8df6E3f",
    "contractAddress": "0x25Be1Ce5501BBDC2fb4B21b97F2b0A6F7349EAb9",
    "transactionIndex": 44,
    "gasUsed": "1608516",
    "logsBloom": "0x
    "blockHash": "0x75aec4a80900731fd7915799a919c35cfff31f65f919a94d1f312935f9aa2362",
    "transactionHash": "0x312e2170a8a03c0ef10f8c73b617924e741d31c8ad100dcb17521a1a30ec3b80",
    "logs": [],
    "blockNumber": 4972295,
    "cumulativeGasUsed": "6742580",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3ce0def368e4b440a13c056b42b98216",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy_tokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw_funds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governance_token.sol\":\"BUNN_UTILITY_TOKEN\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/governance_token.sol\":{\"content\":\"// Sources flattened with hardhat v2.17.3 https://hardhat.org\\n\\n// SPDX-License-Identifier: MIT AND SEE\\n//\\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v4.9.3\\n\\n// Original license: SPDX_License_Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.19;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\\n// File @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol@v4.9.3\\n\\n// Original license: SPDX_License_Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.19;\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\\n// File @openzeppelin/contracts/utils/Context.sol@v4.9.3\\n\\n// Original license: SPDX_License_Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.19;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\\n// File @openzeppelin/contracts/token/ERC20/ERC20.sol@v4.9.3\\n\\n// Original license: SPDX_License_Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.19;\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(\\n        address account\\n    ) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(\\n        address spender,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(\\n        address spender,\\n        uint256 addedValue\\n    ) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(\\n        address spender,\\n        uint256 subtractedValue\\n    ) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(\\n            currentAllowance >= subtractedValue,\\n            \\\"ERC20: decreased allowance below zero\\\"\\n        );\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(\\n            fromBalance >= amount,\\n            \\\"ERC20: transfer amount exceeds balance\\\"\\n        );\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(\\n                currentAllowance >= amount,\\n                \\\"ERC20: insufficient allowance\\\"\\n            );\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\\n// File contracts/ico-token.sol\\n\\n// Original license: SPDX_License_Identifier: SEE\\npragma solidity ^0.8.19;\\n\\n// contract BUNN_ICO_TOKEN\\ncontract BUNN_UTILITY_TOKEN is ERC20 {\\n    uint256 private MAX_SUPPLY;\\n    address public owner;\\n\\n    constructor() ERC20(\\\"BUNN_UTILITY_TOKEN\\\", \\\"BUNN\\\") {\\n        owner = msg.sender;\\n        MAX_SUPPLY = 10_000_000_000 * (10 ** decimals());\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Unauthorized Entity\\\");\\n\\n        _;\\n    }\\n\\n    function mint(address account, uint256 amount) public onlyOwner {\\n        require(totalSupply() + amount <= MAX_SUPPLY, \\\"MAX SUPPLY EXCEEDED\\\");\\n        super._mint(account, amount);\\n    }\\n\\n    function name() public view virtual override returns (string memory) {\\n        return \\\"ONWUAJUESE\\\";\\n    }\\n\\n    function symbol() public view virtual override returns (string memory) {\\n        return \\\"BUNN\\\";\\n    }\\n\\n    function buy_tokens() public payable {\\n        require(msg.value > 0, \\\"ETH MUST BE MORE THAN 0\\\");\\n        require(msg.value <= address(msg.sender).balance, \\\"NOT ENOUGH ETH\\\");\\n        super._mint(msg.sender, (msg.value * 500) / 1e18); //1 ETH = 250 BUNN\\n    }\\n\\n    function withdraw_funds(address holder, uint256 amount) public onlyOwner {\\n        require(address(this).balance > amount, \\\"INSUFFICIENT FUNDS\\\");\\n        payable(holder).transfer(amount * 1e18);\\n    }\\n}\\n\",\"keccak256\":\"0xa9c8416a9fe6794142a5e1b6029a71d2334e59e45448f51628abdd65ff406424\",\"license\":\"MIT AND SEE\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280601281526020017f42554e4e5f5554494c4954595f544f4b454e00000000000000000000000000008152506040518060400160405280600481526020017f42554e4e0000000000000000000000000000000000000000000000000000000081525081600390816200008f9190620003a4565b508060049081620000a19190620003a4565b50505033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000f56200012160201b60201c565b600a6200010391906200061b565b6402540be4006200011591906200066c565b600581905550620006b7565b60006012905090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001ac57607f821691505b602082108103620001c257620001c162000164565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200022c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001ed565b620002388683620001ed565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002856200027f620002798462000250565b6200025a565b62000250565b9050919050565b6000819050919050565b620002a18362000264565b620002b9620002b0826200028c565b848454620001fa565b825550505050565b600090565b620002d0620002c1565b620002dd81848462000296565b505050565b5b818110156200030557620002f9600082620002c6565b600181019050620002e3565b5050565b601f82111562000354576200031e81620001c8565b6200032984620001dd565b8101602085101562000339578190505b620003516200034885620001dd565b830182620002e2565b50505b505050565b600082821c905092915050565b6000620003796000198460080262000359565b1980831691505092915050565b600062000394838362000366565b9150826002028217905092915050565b620003af826200012a565b67ffffffffffffffff811115620003cb57620003ca62000135565b5b620003d7825462000193565b620003e482828562000309565b600060209050601f8311600181146200041c576000841562000407578287015190505b62000413858262000386565b86555062000483565b601f1984166200042c86620001c8565b60005b8281101562000456578489015182556001820191506020850194506020810190506200042f565b8683101562000476578489015162000472601f89168262000366565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200051957808604811115620004f157620004f06200048b565b5b6001851615620005015780820291505b80810290506200051185620004ba565b9450620004d1565b94509492505050565b60008262000534576001905062000607565b8162000544576000905062000607565b81600181146200055d576002811462000568576200059e565b600191505062000607565b60ff8411156200057d576200057c6200048b565b5b8360020a9150848211156200059757620005966200048b565b5b5062000607565b5060208310610133831016604e8410600b8410161715620005d85782820a905083811115620005d257620005d16200048b565b5b62000607565b620005e78484846001620004c7565b925090508184048111156200060157620006006200048b565b5b81810290505b9392505050565b600060ff82169050919050565b6000620006288262000250565b915062000635836200060e565b9250620006647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000522565b905092915050565b6000620006798262000250565b9150620006868362000250565b9250828202620006968162000250565b91508282048414831517620006b057620006af6200048b565b5b5092915050565b611a3880620006c76000396000f3fe6080604052600436106100e85760003560e01c806340c10f191161008a57806395d89b411161005957806395d89b41146102e9578063a457c2d714610314578063a9059cbb14610351578063dd62ed3e1461038e576100e8565b806340c10f191461024e578063469c62a61461027757806370a08231146102815780638da5cb5b146102be576100e8565b806323b872dd116100c657806323b872dd1461018057806325f62784146101bd578063313ce567146101e65780633950935114610211576100e8565b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610155575b600080fd5b3480156100f957600080fd5b506101026103cb565b60405161010f9190611021565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a91906110dc565b610408565b60405161014c9190611137565b60405180910390f35b34801561016157600080fd5b5061016a61042b565b6040516101779190611161565b60405180910390f35b34801561018c57600080fd5b506101a760048036038101906101a2919061117c565b610435565b6040516101b49190611137565b60405180910390f35b3480156101c957600080fd5b506101e460048036038101906101df91906110dc565b610464565b005b3480156101f257600080fd5b506101fb610594565b60405161020891906111eb565b60405180910390f35b34801561021d57600080fd5b50610238600480360381019061023391906110dc565b61059d565b6040516102459190611137565b60405180910390f35b34801561025a57600080fd5b50610275600480360381019061027091906110dc565b6105d4565b005b61027f6106c9565b005b34801561028d57600080fd5b506102a860048036038101906102a39190611206565b610792565b6040516102b59190611161565b60405180910390f35b3480156102ca57600080fd5b506102d36107da565b6040516102e09190611242565b60405180910390f35b3480156102f557600080fd5b506102fe610800565b60405161030b9190611021565b60405180910390f35b34801561032057600080fd5b5061033b600480360381019061033691906110dc565b61083d565b6040516103489190611137565b60405180910390f35b34801561035d57600080fd5b50610378600480360381019061037391906110dc565b6108b4565b6040516103859190611137565b60405180910390f35b34801561039a57600080fd5b506103b560048036038101906103b0919061125d565b6108d7565b6040516103c29190611161565b60405180910390f35b60606040518060400160405280600a81526020017f4f4e5755414a5545534500000000000000000000000000000000000000000000815250905090565b60008061041361095e565b9050610420818585610966565b600191505092915050565b6000600254905090565b60008061044061095e565b905061044d858285610b2f565b610458858585610bbb565b60019150509392505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb906112e9565b60405180910390fd5b804711610536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052d90611355565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400008361056491906113a4565b9081150290604051600060405180830381858888f1935050505015801561058f573d6000803e3d6000fd5b505050565b60006012905090565b6000806105a861095e565b90506105c98185856105ba85896108d7565b6105c491906113e6565b610966565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065b906112e9565b60405180910390fd5b6005548161067061042b565b61067a91906113e6565b11156106bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b290611466565b60405180910390fd5b6106c58282610e31565b5050565b6000341161070c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610703906114d2565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1631341115610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075d9061153e565b60405180910390fd5b61079033670de0b6b3a76400006101f43461078191906113a4565b61078b919061158d565b610e31565b565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606040518060400160405280600481526020017f42554e4e00000000000000000000000000000000000000000000000000000000815250905090565b60008061084861095e565b9050600061085682866108d7565b90508381101561089b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089290611630565b60405180910390fd5b6108a88286868403610966565b60019250505092915050565b6000806108bf61095e565b90506108cc818585610bbb565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cc906116c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3b90611754565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b229190611161565b60405180910390a3505050565b6000610b3b84846108d7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bb55781811015610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e906117c0565b60405180910390fd5b610bb48484848403610966565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2190611852565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c90906118e4565b60405180910390fd5b610ca4838383610f87565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2190611976565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e189190611161565b60405180910390a3610e2b848484610f8c565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e97906119e2565b60405180910390fd5b610eac60008383610f87565b8060026000828254610ebe91906113e6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f6f9190611161565b60405180910390a3610f8360008383610f8c565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fcb578082015181840152602081019050610fb0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ff382610f91565b610ffd8185610f9c565b935061100d818560208601610fad565b61101681610fd7565b840191505092915050565b6000602082019050818103600083015261103b8184610fe8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061107382611048565b9050919050565b61108381611068565b811461108e57600080fd5b50565b6000813590506110a08161107a565b92915050565b6000819050919050565b6110b9816110a6565b81146110c457600080fd5b50565b6000813590506110d6816110b0565b92915050565b600080604083850312156110f3576110f2611043565b5b600061110185828601611091565b9250506020611112858286016110c7565b9150509250929050565b60008115159050919050565b6111318161111c565b82525050565b600060208201905061114c6000830184611128565b92915050565b61115b816110a6565b82525050565b60006020820190506111766000830184611152565b92915050565b60008060006060848603121561119557611194611043565b5b60006111a386828701611091565b93505060206111b486828701611091565b92505060406111c5868287016110c7565b9150509250925092565b600060ff82169050919050565b6111e5816111cf565b82525050565b600060208201905061120060008301846111dc565b92915050565b60006020828403121561121c5761121b611043565b5b600061122a84828501611091565b91505092915050565b61123c81611068565b82525050565b60006020820190506112576000830184611233565b92915050565b6000806040838503121561127457611273611043565b5b600061128285828601611091565b925050602061129385828601611091565b9150509250929050565b7f556e617574686f72697a656420456e7469747900000000000000000000000000600082015250565b60006112d3601383610f9c565b91506112de8261129d565b602082019050919050565b60006020820190508181036000830152611302816112c6565b9050919050565b7f494e53554646494349454e542046554e44530000000000000000000000000000600082015250565b600061133f601283610f9c565b915061134a82611309565b602082019050919050565b6000602082019050818103600083015261136e81611332565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113af826110a6565b91506113ba836110a6565b92508282026113c8816110a6565b915082820484148315176113df576113de611375565b5b5092915050565b60006113f1826110a6565b91506113fc836110a6565b925082820190508082111561141457611413611375565b5b92915050565b7f4d415820535550504c5920455843454544454400000000000000000000000000600082015250565b6000611450601383610f9c565b915061145b8261141a565b602082019050919050565b6000602082019050818103600083015261147f81611443565b9050919050565b7f455448204d555354204245204d4f5245205448414e2030000000000000000000600082015250565b60006114bc601783610f9c565b91506114c782611486565b602082019050919050565b600060208201905081810360008301526114eb816114af565b9050919050565b7f4e4f5420454e4f55474820455448000000000000000000000000000000000000600082015250565b6000611528600e83610f9c565b9150611533826114f2565b602082019050919050565b600060208201905081810360008301526115578161151b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611598826110a6565b91506115a3836110a6565b9250826115b3576115b261155e565b5b828204905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061161a602583610f9c565b9150611625826115be565b604082019050919050565b600060208201905081810360008301526116498161160d565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006116ac602483610f9c565b91506116b782611650565b604082019050919050565b600060208201905081810360008301526116db8161169f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061173e602283610f9c565b9150611749826116e2565b604082019050919050565b6000602082019050818103600083015261176d81611731565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006117aa601d83610f9c565b91506117b582611774565b602082019050919050565b600060208201905081810360008301526117d98161179d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061183c602583610f9c565b9150611847826117e0565b604082019050919050565b6000602082019050818103600083015261186b8161182f565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006118ce602383610f9c565b91506118d982611872565b604082019050919050565b600060208201905081810360008301526118fd816118c1565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611960602683610f9c565b915061196b82611904565b604082019050919050565b6000602082019050818103600083015261198f81611953565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006119cc601f83610f9c565b91506119d782611996565b602082019050919050565b600060208201905081810360008301526119fb816119bf565b905091905056fea2646970667358221220acc7a5743d33ecbb376d076204346ac6a53719bb7b347f39d22828afeca38c9264736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c806340c10f191161008a57806395d89b411161005957806395d89b41146102e9578063a457c2d714610314578063a9059cbb14610351578063dd62ed3e1461038e576100e8565b806340c10f191461024e578063469c62a61461027757806370a08231146102815780638da5cb5b146102be576100e8565b806323b872dd116100c657806323b872dd1461018057806325f62784146101bd578063313ce567146101e65780633950935114610211576100e8565b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610155575b600080fd5b3480156100f957600080fd5b506101026103cb565b60405161010f9190611021565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a91906110dc565b610408565b60405161014c9190611137565b60405180910390f35b34801561016157600080fd5b5061016a61042b565b6040516101779190611161565b60405180910390f35b34801561018c57600080fd5b506101a760048036038101906101a2919061117c565b610435565b6040516101b49190611137565b60405180910390f35b3480156101c957600080fd5b506101e460048036038101906101df91906110dc565b610464565b005b3480156101f257600080fd5b506101fb610594565b60405161020891906111eb565b60405180910390f35b34801561021d57600080fd5b50610238600480360381019061023391906110dc565b61059d565b6040516102459190611137565b60405180910390f35b34801561025a57600080fd5b50610275600480360381019061027091906110dc565b6105d4565b005b61027f6106c9565b005b34801561028d57600080fd5b506102a860048036038101906102a39190611206565b610792565b6040516102b59190611161565b60405180910390f35b3480156102ca57600080fd5b506102d36107da565b6040516102e09190611242565b60405180910390f35b3480156102f557600080fd5b506102fe610800565b60405161030b9190611021565b60405180910390f35b34801561032057600080fd5b5061033b600480360381019061033691906110dc565b61083d565b6040516103489190611137565b60405180910390f35b34801561035d57600080fd5b50610378600480360381019061037391906110dc565b6108b4565b6040516103859190611137565b60405180910390f35b34801561039a57600080fd5b506103b560048036038101906103b0919061125d565b6108d7565b6040516103c29190611161565b60405180910390f35b60606040518060400160405280600a81526020017f4f4e5755414a5545534500000000000000000000000000000000000000000000815250905090565b60008061041361095e565b9050610420818585610966565b600191505092915050565b6000600254905090565b60008061044061095e565b905061044d858285610b2f565b610458858585610bbb565b60019150509392505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb906112e9565b60405180910390fd5b804711610536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052d90611355565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400008361056491906113a4565b9081150290604051600060405180830381858888f1935050505015801561058f573d6000803e3d6000fd5b505050565b60006012905090565b6000806105a861095e565b90506105c98185856105ba85896108d7565b6105c491906113e6565b610966565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065b906112e9565b60405180910390fd5b6005548161067061042b565b61067a91906113e6565b11156106bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b290611466565b60405180910390fd5b6106c58282610e31565b5050565b6000341161070c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610703906114d2565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1631341115610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075d9061153e565b60405180910390fd5b61079033670de0b6b3a76400006101f43461078191906113a4565b61078b919061158d565b610e31565b565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606040518060400160405280600481526020017f42554e4e00000000000000000000000000000000000000000000000000000000815250905090565b60008061084861095e565b9050600061085682866108d7565b90508381101561089b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089290611630565b60405180910390fd5b6108a88286868403610966565b60019250505092915050565b6000806108bf61095e565b90506108cc818585610bbb565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cc906116c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3b90611754565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b229190611161565b60405180910390a3505050565b6000610b3b84846108d7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bb55781811015610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e906117c0565b60405180910390fd5b610bb48484848403610966565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2190611852565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c90906118e4565b60405180910390fd5b610ca4838383610f87565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2190611976565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e189190611161565b60405180910390a3610e2b848484610f8c565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e97906119e2565b60405180910390fd5b610eac60008383610f87565b8060026000828254610ebe91906113e6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f6f9190611161565b60405180910390a3610f8360008383610f8c565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fcb578082015181840152602081019050610fb0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ff382610f91565b610ffd8185610f9c565b935061100d818560208601610fad565b61101681610fd7565b840191505092915050565b6000602082019050818103600083015261103b8184610fe8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061107382611048565b9050919050565b61108381611068565b811461108e57600080fd5b50565b6000813590506110a08161107a565b92915050565b6000819050919050565b6110b9816110a6565b81146110c457600080fd5b50565b6000813590506110d6816110b0565b92915050565b600080604083850312156110f3576110f2611043565b5b600061110185828601611091565b9250506020611112858286016110c7565b9150509250929050565b60008115159050919050565b6111318161111c565b82525050565b600060208201905061114c6000830184611128565b92915050565b61115b816110a6565b82525050565b60006020820190506111766000830184611152565b92915050565b60008060006060848603121561119557611194611043565b5b60006111a386828701611091565b93505060206111b486828701611091565b92505060406111c5868287016110c7565b9150509250925092565b600060ff82169050919050565b6111e5816111cf565b82525050565b600060208201905061120060008301846111dc565b92915050565b60006020828403121561121c5761121b611043565b5b600061122a84828501611091565b91505092915050565b61123c81611068565b82525050565b60006020820190506112576000830184611233565b92915050565b6000806040838503121561127457611273611043565b5b600061128285828601611091565b925050602061129385828601611091565b9150509250929050565b7f556e617574686f72697a656420456e7469747900000000000000000000000000600082015250565b60006112d3601383610f9c565b91506112de8261129d565b602082019050919050565b60006020820190508181036000830152611302816112c6565b9050919050565b7f494e53554646494349454e542046554e44530000000000000000000000000000600082015250565b600061133f601283610f9c565b915061134a82611309565b602082019050919050565b6000602082019050818103600083015261136e81611332565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113af826110a6565b91506113ba836110a6565b92508282026113c8816110a6565b915082820484148315176113df576113de611375565b5b5092915050565b60006113f1826110a6565b91506113fc836110a6565b925082820190508082111561141457611413611375565b5b92915050565b7f4d415820535550504c5920455843454544454400000000000000000000000000600082015250565b6000611450601383610f9c565b915061145b8261141a565b602082019050919050565b6000602082019050818103600083015261147f81611443565b9050919050565b7f455448204d555354204245204d4f5245205448414e2030000000000000000000600082015250565b60006114bc601783610f9c565b91506114c782611486565b602082019050919050565b600060208201905081810360008301526114eb816114af565b9050919050565b7f4e4f5420454e4f55474820455448000000000000000000000000000000000000600082015250565b6000611528600e83610f9c565b9150611533826114f2565b602082019050919050565b600060208201905081810360008301526115578161151b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611598826110a6565b91506115a3836110a6565b9250826115b3576115b261155e565b5b828204905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061161a602583610f9c565b9150611625826115be565b604082019050919050565b600060208201905081810360008301526116498161160d565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006116ac602483610f9c565b91506116b782611650565b604082019050919050565b600060208201905081810360008301526116db8161169f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061173e602283610f9c565b9150611749826116e2565b604082019050919050565b6000602082019050818103600083015261176d81611731565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006117aa601d83610f9c565b91506117b582611774565b602082019050919050565b600060208201905081810360008301526117d98161179d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061183c602583610f9c565b9150611847826117e0565b604082019050919050565b6000602082019050818103600083015261186b8161182f565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006118ce602383610f9c565b91506118d982611872565b604082019050919050565b600060208201905081810360008301526118fd816118c1565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611960602683610f9c565b915061196b82611904565b604082019050919050565b6000602082019050818103600083015261198f81611953565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006119cc601f83610f9c565b91506119d782611996565b602082019050919050565b600060208201905081810360008301526119fb816119bf565b905091905056fea2646970667358221220acc7a5743d33ecbb376d076204346ac6a53719bb7b347f39d22828afeca38c9264736f6c63430008140033",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2082,
        "contract": "contracts/governance_token.sol:BUNN_UTILITY_TOKEN",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2088,
        "contract": "contracts/governance_token.sol:BUNN_UTILITY_TOKEN",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 2090,
        "contract": "contracts/governance_token.sol:BUNN_UTILITY_TOKEN",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 2092,
        "contract": "contracts/governance_token.sol:BUNN_UTILITY_TOKEN",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 2094,
        "contract": "contracts/governance_token.sol:BUNN_UTILITY_TOKEN",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 2658,
        "contract": "contracts/governance_token.sol:BUNN_UTILITY_TOKEN",
        "label": "MAX_SUPPLY",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 2660,
        "contract": "contracts/governance_token.sol:BUNN_UTILITY_TOKEN",
        "label": "owner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}